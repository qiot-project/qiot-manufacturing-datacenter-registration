name: main

on:
  workflow_dispatch:
  
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Push image
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[maven-release-plugin]')"
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v18
        with:
          servers: |
            [
              {
                "id": "qiot-central",
                "username": "${env.ARTIFACTORY_USERNAME_REF}",
                "password": "${env.ARTIFACTORY_TOKEN_REF}"
              },
              {
                "id": "qiot-snapshots",
                "username": "${env.ARTIFACTORY_USERNAME_REF}",
                "password": "${env.ARTIFACTORY_TOKEN_REF}"
              }
            ]
      - name: Build with Maven
        env:
           ARTIFACTORY_USERNAME_REF: ${{ secrets.ARTIFACTORY_USERNAME }}
           ARTIFACTORY_TOKEN_REF: ${{ secrets.ARTIFACTORY_TOKEN }}
        run: mvn -B -Pprod,native deploy
      - name: Push Image
        run: |
          mvn -B -Pprod,native oc:build oc:push                          \
          -Djkube.docker.push.username=${{ secrets.QUAY_ALL_USERNAME }}      \
          -Djkube.docker.push.password=${{ secrets.QUAY_ALL_PASSWORD }}
      - name: Get the SHA of the container
        run: |
            echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
            echo "IMAGE_NAME=pull quay.io/qiotproject/all-registration" >> $GITHUB_ENV

            docker pull ${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            echo "IMAGE_SHA=$(docker inspect --format='{{.RepoDigests}}'  ${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}|sed 's:^.\(.*\).$:\1:'|tr " " "\n")" >> $GITHUB_ENV

            echo "${{ env.IMAGE_SHA }}"

      # TODO: Update gitops repo