quarkus.log.level=${LOG_LEVEL\:INFO}
#quarkus.log.category."io.qiot.manufacturing".level=DEBUG
%dev.quarkus.log.console.color=true

%prod.quarkus.http.port=${HTTP_PORT\:8080}
%dev.quarkus.http.port=5202
quarkus.resteasy.path=/v1

quarkus.swagger-ui.always-include=true

quarkus.kubernetes-client.trust-certs=true

qiot.cert-manager.issuer=vault-manufacturing-issuer-vault
qiot.cert-manager.domain=.qiot-project.io
qiot.cert-manager.wait.duration=30

quarkus.native.resources.includes=certs/mqtts/client.ts,certs/mqtts/client.ks,certs/https/broker.ts,certs/https/broker.ks

### enabling https ###
%prod.quarkus.ssl.native=true
%prod.quarkus.http.ssl-port=8443
%prod.quarkus.http.ssl.client-auth=required
%prod.quarkus.http.ssl.certificate.key-store-file=certs/https/broker.ks
%prod.quarkus.http.ssl.certificate.key-store-password=123456
%prod.quarkus.http.ssl.certificate.trust-store-file=certs/https/broker.ts
%prod.quarkus.http.ssl.certificate.trust-store-password=123456

%prod.quarkus.http.insecure-requests=disabled

########## KUBERNETES CLIENT ##########
# Dev
%dev.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}

# Test
%test.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}

# Staging
%staging.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}

#Prod
###Kubernetes client namespace must be replaced with 
#the name of the namespace hosting the certificate issuer
#possible values:
#   manufacturing-dev
#   manufacturing-int
#   manufacturing-prod
quarkus.kubernetes-client.namespace=manufacturing-prod
%prod.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:true}