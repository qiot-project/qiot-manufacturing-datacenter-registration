quarkus.log.level=${LOGLEVEL\:INFO}
#quarkus.http.port=${HTTPPORT\:8080}
quarkus.resteasy.path=/v1

#quarkus.smallrye-openapi.path=/v1/swagger
quarkus.swagger-ui.always-include=true
#quarkus.swagger-ui.path=/v1/swaggerui

# Rest client configuration properties
# using "configKey" instead of interface fully qualified name
# Station service
station-api/mp-rest/url=${STATION-SERVICE-URL\:http\://localhost:5033} 
station-api/mp-rest/scope=javax.inject.Singleton

quarkus.kubernetes-client.trust-certs=true

qiot.cert-manager.issuer=vault-covid19-issuer-vault
qiot.cert-manager.domain=.qiot-project.io
qiot.cert-manager.wait.duration=30

quarkus.native.resources.includes=certs/mqtts/client.ts,certs/mqtts/client.ks,certs/https/broker.ts,certs/https/broker.ks

### enabling https ###
quarkus.ssl.native=true
quarkus.http.ssl-port=8443
quarkus.http.ssl.client-auth=required
quarkus.http.ssl.certificate.key-store-file=certs/https/broker.ks
quarkus.http.ssl.certificate.key-store-password=123456
quarkus.http.ssl.certificate.trust-store-file=certs/https/broker.ts
quarkus.http.ssl.certificate.trust-store-password=123456

quarkus.http.insecure-requests=disabled

########## KUBERNETES CLIENT ##########
# Dev
%dev.quarkus.http.port=5016
%dev.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}


# Test
%test.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}

# Staging
%staging.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}

#Prod
###Kubernetes client namespace must be replaced with 
#the name of the namespace hosting the certificate issuer
#possible values:
#   covid19-dev
#   covid19-int
#   covid19-prod
quarkus.kubernetes-client.namespace=covid19-prod
%prod.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:true}