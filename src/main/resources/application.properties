########## LOGGING ##########
quarkus.log.level=${LOG_LEVEL\:INFO}
%dev.quarkus.log.category."io.qiot.manufacturing".level=DEBUG
quarkus.log.category."io.qiot.manufacturing".level=${QIOT_LOG_LEVEL:INFO}
%dev.quarkus.log.console.color=true


########## OPENAPI ##########
quarkus.swagger-ui.always-include=true


########## APP data ##########
quarkus.native.resources.includes=certs/**


########## HTTP ##########
%dev.quarkus.http.port=5202
quarkus.resteasy.path=/v1

########## KUBERNETES CLIENT ##########
quarkus.kubernetes-client.trust-certs=true

qiot.cert-manager.issuer=ocp-install-issuer-vault
qiot.cert-manager.domain=.qiot-project.io
qiot.cert-manager.baseDomain=.apps.cluster-4ktth.4ktth.sandbox1357.opentlc.com
qiot.cert-manager.wait.duration=30
qiot.cert-manager.intermediate.issuer=factory

# Dev
%dev.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:true}
%dev.quarkus.kubernetes-client.namespace=manufacturing-dev
#%dev.qiot.cert-manager.domain=.openlab.red


# Test
%test.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}

# Staging
%staging.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:false}

#Prod
###Kubernetes client namespace must be replaced with 
#the name of the namespace hosting the certificate issuer
#possible values:
#   manufacturing-dev
#   manufacturing-int
#   manufacturing-prod
quarkus.kubernetes-client.namespace=manufacturing-dev
%prod.qiot.cert-manager.enabled=${CERT_MANAGER_ENABLED\:true}


# Vault - Intermediate Issuer CA using registration-service SA
# vault url
%dev.quarkus.vault.url=https://vault.apps.cluster-4ktth.4ktth.sandbox1357.opentlc.com
%dev.quarkus.vault.tls.skip-verify=true
%dev.quarkus.vault.tls.use-kubernetes-ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
%dev.quarkus.vault.authentication.kubernetes.role=${%dev.quarkus.kubernetes-client.namespace}-reg-policy

quarkus.vault.url=https://vault.hashicorp.svc.cluster.local:8200
quarkus.vault.authentication.kubernetes.role=${quarkus.kubernetes-client.namespace}-reg-policy


# 1 Year
qiot.vault.ttl=8760h
